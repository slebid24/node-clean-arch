{
	"openapi": "3.0.0",
	"info": {
		"title": "My API",
		"version": "1.0.0",
		"description": "This is a simple CRUD API application made with Express"
	},
	"servers": [
		{
			"url": "http://localhost:3000/api/v1",
			"description": "Development server"
		}
	],
	"paths": {
		"/auth/refresh-token": {
			"post": {
				"summary": "Refresh access token",
				"tags": ["Auth"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"refreshToken": {
										"type": "string",
										"description": "Refresh token to get a new access token"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Access token refreshed successfully"
					},
					"400": {
						"description": "Invalid refresh token"
					}
				}
			}
		},
		"/auth/sign-in": {
			"post": {
				"summary": "Sign in user",
				"tags": ["Auth"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"password": {
										"type": "string",
										"format": "password",
										"description": "User password"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User signed in successfully"
					},
					"401": {
						"description": "Authentication failed"
					}
				}
			}
		},
		"/auth/sign-up": {
			"post": {
				"summary": "Sign up new user",
				"tags": ["Auth"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["email", "password"],
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"description": "User email address"
									},
									"password": {
										"type": "string",
										"format": "password",
										"description": "User password"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User signed up successfully"
					},
					"400": {
						"description": "Invalid input data"
					}
				}
			}
		},
		"/users": {
			"get": {
				"summary": "List all users",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "A list of users",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/User"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Add a new user",
				"tags": ["User"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User created successfully"
					},
					"400": {
						"description": "Invalid input"
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"summary": "Get a user by ID",
				"tags": ["User"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the user to retrieve",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User details retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"put": {
				"summary": "Update a user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User updated successfully"
					},
					"400": {
						"description": "Invalid input"
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"delete": {
				"summary": "Delete a user by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the user to delete",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"204": {
						"description": "User deleted successfully"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"User": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string",
						"format": "password",
						"minLength": 6
					},
					"role": {
						"type": "string",
						"enum": ["USER", "ADMIN"]
					}
				}
			}
		}
	}
}
